// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  SubCategory SubCategory[]
  Product     Product[]
}

model SubCategory {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  category    Category  @relation(fields: [id], references: [id])
  Product     Product[]
}

model Product {
  id              Int               @id @default(autoincrement())
  name            String
  description     String?
  price           Float
  imageUrl        String
  // Especificar categoria o subcategoria, si o si una de las dos (pero opcionales en un inicio)
  categoryId      Int?
  category        Category?         @relation(fields: [categoryId], references: [id])
  subCategoryId   Int?
  subCategory     SubCategory?      @relation(fields: [subCategoryId], references: [id])
  HistoricProduct HistoricProduct[]
}

// Esta entidad sirve como auditora para los productos creados y sus modificaciones de precio en algun momento dado.
model HistoricProduct {
  id         Int      @id @default(autoincrement())
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  price      Float
  createdAt  DateTime @default(now())
  modifiedBy String?
}
